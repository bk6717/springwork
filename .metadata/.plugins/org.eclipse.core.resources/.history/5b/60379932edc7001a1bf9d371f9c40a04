package com.cos.blog.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.cos.blog.model.Account;
import com.cos.blog.repository.AccountRepository;

@Service
public class AccountService {
	
	private AccountRepository accountRepository;
	
	
	@Transactional // 이함수가 끝날때, 둘중하나라고 실패하면 rollback, 성공하면 commit 
	public void 송금(Account a1, Account a2, int acceptMoney){
		//홍길동 업데이트 a1
		Account 홍길동 = accountRepository.findByAccountNumber(a1.getAccountNumber());
		홍길동.setMoney(홍길동.getMoney() - acceptMoney);
		accountRepository.update(홍길동);
		
		//장보고 업데이트 a2
		Account 장보고 = accountRepository.findByAccountNumber(a2.getAccountNumber());
		장보고.setMoney(장보고.getMoney() + acceptMoney);
		accountRepository.update(홍길동);
	}
	
	@Transactional
	public void 인출(Account a, int accpetMoney) {
		Account 홍길동 = accountRepository.findByAccountNumber(a.getAccountNumber());
		홍길동.setMoney(홍길동.getMoney() - accpetMoney);
		accountRepository.update(홍길동);
	}
	
	@Transactional(readOnly = true) //고립성
	public List<Account> 계좌정보보기(){
		
		return accountRepository.findAll();
	}
}
